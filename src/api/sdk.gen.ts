// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, formDataBodySerializer } from './client';
import type { GetRecipesData, GetRecipesResponse, CreateRecipeData, CreateRecipeResponse, DeleteRecipeData, GetRecipeData, GetRecipeResponse, UpdateRecipeData, UpdateRecipeResponse, UserLoginData, UserLoginResponse, UserRegisterData, GetProfileData, GetProfileResponse, GetIngredientsData, GetIngredientsResponse, GetTemplatesData, GetTemplatesResponse, CreatePlanData, CreatePlanResponse, RemoveTemplateData, GetTemplateData, GetTemplateResponse, UpdateTemplateData, UpdateTemplateResponse, ImportBackupData, ScrapRecipeData, ScrapRecipeResponse, GetProductsData, GetProductsResponse, DeleteProductData, GetProductData, GetProductResponse, UpdateProductData, UpdateProductResponse, GetMealsData, GetMealsResponse, CreateMealData, CreateMealResponse, DeleteMealData, GetMealData, GetMealResponse, UpdateMealData, UpdateMealResponse } from './types.gen';

export const client = createClient(createConfig());

export class RecipesService {
    /**
     * Get all recipes with pagination
     */
    public static getRecipes<ThrowOnError extends boolean = false>(options: Options<GetRecipesData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRecipesResponse, unknown, ThrowOnError>({
            ...options,
            url: '/v1/recipes'
        });
    }
    
    /**
     * Add a new recipes
     */
    public static createRecipe<ThrowOnError extends boolean = false>(options: Options<CreateRecipeData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateRecipeResponse, unknown, ThrowOnError>({
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            },
            url: '/v1/recipes'
        });
    }
    
    /**
     * Delete a single recipe
     */
    public static deleteRecipe<ThrowOnError extends boolean = false>(options: Options<DeleteRecipeData, ThrowOnError>) {
        return (options?.client ?? client).delete<unknown, unknown, ThrowOnError>({
            ...options,
            url: '/v1/recipes/{id}'
        });
    }
    
    /**
     * Get a single recipe
     */
    public static getRecipe<ThrowOnError extends boolean = false>(options: Options<GetRecipeData, ThrowOnError>) {
        return (options?.client ?? client).get<GetRecipeResponse, unknown, ThrowOnError>({
            ...options,
            url: '/v1/recipes/{id}'
        });
    }
    
    /**
     * Replace a single recipe
     */
    public static updateRecipe<ThrowOnError extends boolean = false>(options: Options<UpdateRecipeData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateRecipeResponse, unknown, ThrowOnError>({
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            },
            url: '/v1/recipes/{id}'
        });
    }
    
}

export class AuthService {
    /**
     * Login the current user
     */
    public static userLogin<ThrowOnError extends boolean = false>(options: Options<UserLoginData, ThrowOnError>) {
        return (options?.client ?? client).post<UserLoginResponse, unknown, ThrowOnError>({
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            },
            url: '/v1/auth/login'
        });
    }
    
    /**
     * Register a new user
     */
    public static userRegister<ThrowOnError extends boolean = false>(options: Options<UserRegisterData, ThrowOnError>) {
        return (options?.client ?? client).post<unknown, unknown, ThrowOnError>({
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            },
            url: '/v1/auth/register'
        });
    }
    
    /**
     * Get the current user
     */
    public static getProfile<ThrowOnError extends boolean = false>(options?: Options<GetProfileData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProfileResponse, unknown, ThrowOnError>({
            ...options,
            url: '/v1/auth/profile'
        });
    }
    
}

export class IngredientsService {
    public static getIngredients<ThrowOnError extends boolean = false>(options: Options<GetIngredientsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetIngredientsResponse, unknown, ThrowOnError>({
            ...options,
            url: '/v1/ingredients'
        });
    }
    
}

export class TemplatesService {
    public static getTemplates<ThrowOnError extends boolean = false>(options: Options<GetTemplatesData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTemplatesResponse, unknown, ThrowOnError>({
            ...options,
            url: '/v1/templates'
        });
    }
    
    public static createPlan<ThrowOnError extends boolean = false>(options: Options<CreatePlanData, ThrowOnError>) {
        return (options?.client ?? client).post<CreatePlanResponse, unknown, ThrowOnError>({
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            },
            url: '/v1/templates'
        });
    }
    
    public static removeTemplate<ThrowOnError extends boolean = false>(options: Options<RemoveTemplateData, ThrowOnError>) {
        return (options?.client ?? client).delete<unknown, unknown, ThrowOnError>({
            ...options,
            url: '/v1/templates/{id}'
        });
    }
    
    public static getTemplate<ThrowOnError extends boolean = false>(options: Options<GetTemplateData, ThrowOnError>) {
        return (options?.client ?? client).get<GetTemplateResponse, unknown, ThrowOnError>({
            ...options,
            url: '/v1/templates/{id}'
        });
    }
    
    public static updateTemplate<ThrowOnError extends boolean = false>(options: Options<UpdateTemplateData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateTemplateResponse, unknown, ThrowOnError>({
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            },
            url: '/v1/templates/{id}'
        });
    }
    
}

export class DataService {
    public static importBackup<ThrowOnError extends boolean = false>(options: Options<ImportBackupData, ThrowOnError>) {
        return (options?.client ?? client).post<unknown, unknown, ThrowOnError>({
            ...options,
            ...formDataBodySerializer,
            headers: {
                'Content-Type': null,
                ...options?.headers
            },
            url: '/v1/data/import/recipes'
        });
    }
    
    public static scrapRecipe<ThrowOnError extends boolean = false>(options: Options<ScrapRecipeData, ThrowOnError>) {
        return (options?.client ?? client).post<ScrapRecipeResponse, unknown, ThrowOnError>({
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            },
            url: '/v1/data/scrap/recipe'
        });
    }
    
}

export class ProductsService {
    public static getProducts<ThrowOnError extends boolean = false>(options: Options<GetProductsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProductsResponse, unknown, ThrowOnError>({
            ...options,
            url: '/v1/products'
        });
    }
    
    public static deleteProduct<ThrowOnError extends boolean = false>(options: Options<DeleteProductData, ThrowOnError>) {
        return (options?.client ?? client).delete<unknown, unknown, ThrowOnError>({
            ...options,
            url: '/v1/products/{id}'
        });
    }
    
    public static getProduct<ThrowOnError extends boolean = false>(options: Options<GetProductData, ThrowOnError>) {
        return (options?.client ?? client).get<GetProductResponse, unknown, ThrowOnError>({
            ...options,
            url: '/v1/products/{id}'
        });
    }
    
    public static updateProduct<ThrowOnError extends boolean = false>(options: Options<UpdateProductData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateProductResponse, unknown, ThrowOnError>({
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            },
            url: '/v1/products/{id}'
        });
    }
    
}

export class MealsService {
    public static getMeals<ThrowOnError extends boolean = false>(options: Options<GetMealsData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMealsResponse, unknown, ThrowOnError>({
            ...options,
            url: '/v1/meals'
        });
    }
    
    public static createMeal<ThrowOnError extends boolean = false>(options: Options<CreateMealData, ThrowOnError>) {
        return (options?.client ?? client).post<CreateMealResponse, unknown, ThrowOnError>({
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            },
            url: '/v1/meals'
        });
    }
    
    public static deleteMeal<ThrowOnError extends boolean = false>(options: Options<DeleteMealData, ThrowOnError>) {
        return (options?.client ?? client).delete<unknown, unknown, ThrowOnError>({
            ...options,
            url: '/v1/meals/{id}'
        });
    }
    
    public static getMeal<ThrowOnError extends boolean = false>(options: Options<GetMealData, ThrowOnError>) {
        return (options?.client ?? client).get<GetMealResponse, unknown, ThrowOnError>({
            ...options,
            url: '/v1/meals/{id}'
        });
    }
    
    public static updateMeal<ThrowOnError extends boolean = false>(options: Options<UpdateMealData, ThrowOnError>) {
        return (options?.client ?? client).put<UpdateMealResponse, unknown, ThrowOnError>({
            ...options,
            headers: {
                'Content-Type': 'application/json',
                ...options?.headers
            },
            url: '/v1/meals/{id}'
        });
    }
    
}